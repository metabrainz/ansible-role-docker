---
- name: Check system architecture is supported
  ansible.builtin.fail:
    msg: "{{ ansible_architecture }} is not a supported architecture"
  when: docker_deb_architecture[ansible_architecture] is not defined

- name: Install Docker repository key
  ansible.builtin.get_url:
    url: "{{ docker_repository_key_url }}"
    dest: "{{ docker_repository_key_path }}"
    checksum: "{{ docker_repository_key_checksum | d(omit) }}"
    mode: "0644"

- name: Remove Docker repository key from /etc/apt/trusted.gpg.d
  ansible.builtin.file:
    path: /etc/apt/trusted.gpg.d/docker.gpg
    state: absent

- name: Remove Docker repository without signed-by
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch={{ docker_deb_architecture[ansible_architecture] }}]
      https://download.docker.com/linux/{{ ansible_distribution | lower }}
      {{ ansible_distribution_release }}
      {{ docker_release_channel }}
    filename: docker
    state: absent

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: >-
        deb [arch={{ docker_deb_architecture[ansible_architecture] }}
        signed-by={{ docker_repository_key_path }}]
        https://download.docker.com/linux/{{ ansible_distribution | lower }}
        {{ ansible_distribution_release }}
        {{ docker_release_channel }}
    filename: docker
    state: present
    update_cache: true

- name: Install Docker apt preferences
  ansible.builtin.template:
    src: etc/apt/preferences.d/99-ansible-docker.j2
    dest: /etc/apt/preferences.d/99-ansible-docker
    mode: "0644"

- name: Install Docker packages
  ansible.builtin.apt:
    name: "{{ docker_packages + docker_containerd_packages }}"
    state: "{{ docker_package_state }}"
    policy_rc_d: "{{ docker_package_policy_rc_d }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create /etc/docker directory
  ansible.builtin.file:
    path: "/etc/docker"
    state: directory
    mode: "0755"

- name: Install Docker daemon configuration
  ansible.builtin.template:
    src: etc/docker/daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: "0644"
    backup: "{{ docker_daemon_config_backup }}"
  vars:
    _docker_daemon_config: >-
      {{
        docker_daemon_config |
        combine(docker_group_daemon_config, docker_host_daemon_config, recursive=True)
      }}
  notify: restart docker

- name: Enable and start Docker
  ansible.builtin.service:
    name: docker
    enabled: "{{ docker_service_enabled }}"
    state: "{{ docker_service_state }}"
  ignore_errors: "{{ ansible_check_mode }}"
