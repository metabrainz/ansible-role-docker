---
- name: Install required dependencies on Ubuntu >= 20.04
  apt:
    name: gnupg
    state: present
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('20.04', '>=')

- name: Install Docker repository key
  apt_key:
    id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
    url: "https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg"
    keyring: "/etc/apt/trusted.gpg.d/docker.gpg"
    state: present

- name: Determine dpkg architecture
  command: dpkg --print-architecture
  register: __docker_dpkg_architecture
  changed_when: false
  check_mode: false

- name: Install Docker repository
  apt_repository:
    repo: "deb [arch={{ __docker_dpkg_architecture.stdout }}] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} {{ docker_release_channel }}"
    filename: docker
    state: present
    update_cache: yes

- name: Install Docker
  apt:
    name: "{{ docker_packages }}"
    state: present
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create /etc/docker directory
  file:
    path: "/etc/docker"
    state: directory
    mode: 0755

- name: Install Docker daemon configuration
  copy:
    content: "{{ _docker_combined_daemon_config|to_nice_json }}"
    dest: "/etc/docker/daemon.json"
    mode: 0644
    backup: "{{ docker_daemon_config_backup }}"
  vars:
    _docker_combined_daemon_config: "{{ docker_daemon_config|d({}) | combine(docker_group_daemon_config|d({}), recursive=True) | combine(docker_host_daemon_config|d({}), recursive=True) }}"
  notify: restart docker

- name: Enable and start Docker
  service:
    name: docker
    enabled: "{{ docker_service_enabled }}"
    state: "{{ docker_service_state }}"
  ignore_errors: "{{ ansible_check_mode }}"
