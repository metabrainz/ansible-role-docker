---
- name: Install Docker repository key
  get_url:
    url: "{{ docker_repository_key_url }}"
    dest: "{{ docker_repository_key_path }}"
    checksum: "{{ docker_repository_key_checksum | d(omit) }}"
    mode: "0644"

- name: Remove Docker repository key from /etc/apt/trusted.gpg.d
  file:
    path: /etc/apt/trusted.gpg.d/docker.gpg
    state: absent

- name: Fetch dpkg architecture
  command: dpkg --print-architecture
  register: __docker_dpkg_architecture
  changed_when: false
  check_mode: false

- name: Remove Docker repository without signed-by
  apt_repository:
    repo: >-
      deb [arch={{ __docker_dpkg_architecture.stdout }}]
      https://download.docker.com/linux/{{ ansible_distribution | lower }}
      {{ ansible_distribution_release }}
      {{ docker_release_channel }}
    filename: docker
    state: absent

- name: Add Docker repository
  apt_repository:
    repo: >-
        deb [arch={{ __docker_dpkg_architecture.stdout }} signed-by={{ docker_repository_key_path }}]
        https://download.docker.com/linux/{{ ansible_distribution | lower }}
        {{ ansible_distribution_release }}
        {{ docker_release_channel }}
    filename: docker
    state: present
    update_cache: true

- name: Install Docker
  apt:
    name: "{{ docker_packages }}"
    state: present
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create /etc/docker directory
  file:
    path: "/etc/docker"
    state: directory
    mode: "0755"

- name: Install Docker daemon configuration
  copy:
    content: >-
      {{
        docker_daemon_config |
        combine(docker_group_daemon_config, docker_host_daemon_config, recursive=True) |
        to_nice_json
      }}
    dest: "/etc/docker/daemon.json"
    mode: "0644"
    backup: "{{ docker_daemon_config_backup }}"
  notify: restart docker

- name: Enable and start Docker
  service:
    name: docker
    enabled: "{{ docker_service_enabled }}"
    state: "{{ docker_service_state }}"
  ignore_errors: "{{ ansible_check_mode }}"
